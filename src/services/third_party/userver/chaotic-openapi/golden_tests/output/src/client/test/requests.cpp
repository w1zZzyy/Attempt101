/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

#include <client/test/requests.hpp>

#include <userver/chaotic/openapi/form.hpp>
#include <userver/chaotic/openapi/parameters_write.hpp>
#include <userver/clients/http/form.hpp>
#include <userver/formats/json/value_builder.hpp>
#include <userver/http/common_headers.hpp>
#include <userver/http/url.hpp>

namespace clients::test {

namespace openapi = USERVER_NAMESPACE::chaotic::openapi;

namespace testme_post {

static constexpr openapi::Name knumber = "number";

static constexpr openapi::Name karray = "array";

void SerializeRequest(const Request& request, USERVER_NAMESPACE::clients::http::Request& http_request) {
    openapi::ParameterSinkHttpClient sink(http_request, "/testme");

    openapi::WriteParameter<openapi::TrivialParameter<openapi::In::kQuery, knumber, std::string, std::string>>(
        request.number, sink
    );

    openapi::WriteParameter<openapi::ArrayParameter<openapi::In::kQuery, karray, ',', std::string, std::string>>(
        request.array, sink
    );

    // http_request.data(ToJsonString(request.body));
    http_request.data(ToString(USERVER_NAMESPACE::formats::json::ValueBuilder(request.body).ExtractValue()));
}

}  // namespace testme_post

}  // namespace clients::test
